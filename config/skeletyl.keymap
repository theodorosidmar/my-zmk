/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

/ {
  keymap {
    compatible = "zmk,keymap";
    base_layer {
      bindings = <
        &kp Q        &kp W       &kp E      &kp R     &kp T         &kp Y       &kp U    &kp I          &kp O         &kp P
        &mt LSHIFT A &lt 5 S     &lt 1 D    &lt 3 F   &kp G         &kp H       &lt 4 J  &lt 2 K        &lt 6 L       &mt LSHIFT SEMI
        &kp Z        &mt LCTRL X &mt LALT C &kp V     &kp B         &kp N       &kp M    &mt LALT COMMA &mt LCTRL DOT &kp SLASH
                                 &none      &LS(LGUI) &kp BSPC      &lt 7 SPACE &kp LGUI &none
      >;
    };

    mouse_layer {
      bindings = <
        &trans &trans    &trans &trans    &trans            &trans &mkp LCLK      &msc SCRL_UP   &mkp RCLK       &trans
        &trans &mkp LCLK &none  &mkp RCLK &trans            &trans &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP    &mmv MOVE_RIGHT
        &trans &trans    &trans &trans    &trans            &trans &msc SCRL_LEFT &msc SCRL_DOWN &msc SCRL_RIGHT &trans
                         &trans &trans    &trans            &trans &trans         &trans
      >;
    };

    navigation_layer {
      bindings = <
        &trans   &trans   &kp PG_UP &trans    &trans        &trans &trans   &trans &trans &trans
        &kp LEFT &kp UP   &kp DOWN  &kp RIGHT &trans        &trans &kp LGUI &none  &trans &trans
        &trans   &kp HOME &kp PG_DN &kp END   &trans        &trans &trans   &trans &trans &trans
                          &trans    &trans    &trans        &trans &trans   &trans
      >;
    };

    right_symbols_layer {
      bindings = <
        &trans    &trans   &trans   &trans &trans           &trans   &kp UNDER &kp PIPE  &kp SQT   &trans
        &kp CARET &kp STAR &kp AMPS &none  &trans           &kp HASH &kp TILDE &kp SLASH &kp DQT   &kp DOLLAR
        &trans    &trans   &trans   &trans &trans           &trans   &kp MINUS &kp BSLH  &kp GRAVE &trans
                           &trans   &trans &trans           &trans   &trans    &trans
      >;
    };

    left_symbols_layer {
      bindings = <
        &trans         &kp COLON       &kp LESS_THAN &kp GREATER_THAN &kp SEMI     &trans &trans          &trans    &trans   &trans
        &kp LEFT_BRACE &kp RIGHT_BRACE &kp LPAR      &kp RPAR         &kp AT       &trans &none           &kp EQUAL &kp PLUS &kp PERCENT
        &trans         &kp EXCLAMATION &kp LBKT      &kp RBKT         &trans       &trans &trans          &trans    &trans   &trans
                                       &trans        &kp K_VOUME_DOWN &trans       &trans &kp K_VOLUME_UP &trans
      >;
    };

    function_keys_layer {
      bindings = <
        &trans &trans &trans &trans &trans                  &trans &kp F7 &kp F8 &kp F9 &kp F10
        &trans &none  &trans &trans &trans                  &trans &kp F4 &kp F5 &kp F6 &kp F11
        &trans &trans &trans &trans &trans                  &trans &kp F1 &kp F2 &kp F3 &kp F12
                      &trans &trans &trans                  &trans &trans &trans
      >;
    };

    numbers_layer {
      bindings = <
        &kp KP_DIVIDE &kp N7 &kp N8 &kp N9 &kp PLUS          &trans &trans &trans &trans &trans
        &kp N0        &kp N1 &kp N2 &kp N3 &kp KP_MINUS      &trans &trans &trans &trans &trans
        &kp STAR      &kp N4 &kp N5 &kp N6 &kp KP_EQUAL      &trans &trans &trans &trans &trans
                             &trans &trans &trans            &trans &trans &trans
      >;
    };

    always_accessible_layer {
      bindings = <
        &trans &trans    &kp COLON &kp ESC   &trans        &trans &trans   &trans &kp PSCRN &kp DEL
        &trans &kp PRCNT &kp FSLH  &kp ENTER &trans        &trans &kp LGUI &trans &trans    &trans
        &trans &trans    &trans    &kp EXCL  &trans        &trans &trans   &trans &trans    &bootloader
                         &trans    &trans    &kp TAB       &none  &trans   &trans
      >;
    };
  };
};
